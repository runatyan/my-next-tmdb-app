"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./utils/TMDbApi.js":
/*!**************************!*\
  !*** ./utils/TMDbApi.js ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchAnimeCredits: function() { return /* binding */ fetchAnimeCredits; },\n/* harmony export */   fetchAnimeImages: function() { return /* binding */ fetchAnimeImages; },\n/* harmony export */   fetchAverageAnimes: function() { return /* binding */ fetchAverageAnimes; },\n/* harmony export */   fetchDateAnimes: function() { return /* binding */ fetchDateAnimes; },\n/* harmony export */   fetchMovieCredits: function() { return /* binding */ fetchMovieCredits; },\n/* harmony export */   fetchMovieImages: function() { return /* binding */ fetchMovieImages; },\n/* harmony export */   fetchNowPlayingAnimes: function() { return /* binding */ fetchNowPlayingAnimes; },\n/* harmony export */   fetchNowPlayingMovies: function() { return /* binding */ fetchNowPlayingMovies; },\n/* harmony export */   fetchPopularAnimes: function() { return /* binding */ fetchPopularAnimes; },\n/* harmony export */   fetchPopularMovies: function() { return /* binding */ fetchPopularMovies; },\n/* harmony export */   fetchTopRatedMovies: function() { return /* binding */ fetchTopRatedMovies; }\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"./node_modules/axios/lib/axios.js\");\n// utils/TMDbApi.js\n\nconst API_KEY = \"29ddb4606480823262ca1015b1993619\";\nconst BASE_URL = \"https://api.themoviedb.org/3\";\n//新作\nconst fetchNowPlayingMovies = async ()=>{\n    let fetchedMovies = [];\n    let page = 1;\n    const maxPages = 5;\n    while(fetchedMovies.length < 20 && page <= maxPages){\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"\".concat(BASE_URL, \"/movie/now_playing?api_key=\").concat(API_KEY, \"&language=ja-JP&page=\").concat(page));\n        const filteredMovies = response.data.results.filter((movie)=>movie.overview && movie.poster_path);\n        fetchedMovies = [\n            ...fetchedMovies,\n            ...filteredMovies\n        ].slice(0, 20);\n        page++;\n    }\n    return fetchedMovies;\n};\n//人気\nconst fetchPopularMovies = async ()=>{\n    let fetchedMovies = [];\n    let page = 1;\n    const maxPages = 5;\n    while(fetchedMovies.length < 20 && page <= maxPages){\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"\".concat(BASE_URL, \"/movie/popular?api_key=\").concat(API_KEY, \"&language=ja-JP&page=\").concat(page));\n        const filteredMovies = response.data.results.filter((movie)=>movie.overview && movie.poster_path);\n        fetchedMovies = [\n            ...fetchedMovies,\n            ...filteredMovies\n        ].slice(0, 20);\n        page++;\n    }\n    return fetchedMovies;\n};\n//高評価\nconst fetchTopRatedMovies = async ()=>{\n    let fetchedMovies = [];\n    let page = 1;\n    const maxPages = 5;\n    while(fetchedMovies.length < 20 && page <= maxPages){\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"\".concat(BASE_URL, \"/movie/top_rated?api_key=\").concat(API_KEY, \"&language=ja-JP&page=\").concat(page));\n        const filteredMovies = response.data.results.filter((movie)=>movie.overview && movie.poster_path);\n        fetchedMovies = [\n            ...fetchedMovies,\n            ...filteredMovies\n        ].slice(0, 20);\n        page++;\n    }\n    return fetchedMovies;\n};\nconst fetchMovieImages = async (movieId)=>{\n    const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"\".concat(BASE_URL, \"/movie/\").concat(movieId, \"/images?api_key=\").concat(API_KEY));\n    //console.log(response);\n    return response.data;\n};\nconst fetchMovieCredits = async (movieId)=>{\n    const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"\".concat(BASE_URL, \"/movie/\").concat(movieId, \"/credits?api_key=\").concat(API_KEY));\n    return response.data;\n};\n/*-------------------------------------------------------------------------*/ const fetchPopularAnimes = async ()=>{\n    let fetchedAnimes = [];\n    let page = 1;\n    const maxPages = 5;\n    while(fetchedAnimes.length < 20 && page <= maxPages){\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"\".concat(BASE_URL, \"/discover/tv?api_key=\").concat(API_KEY, \"&language=ja-JP&with_genres=16&sort_by=popularity.desc&page=\").concat(page));\n        const filteredAnimes = response.data.results.filter((anime)=>anime.name && anime.overview && anime.poster_path);\n        fetchedAnimes = [\n            ...fetchedAnimes,\n            ...filteredAnimes\n        ].slice(0, 20);\n        page++;\n    }\n    return fetchedAnimes;\n};\nconst fetchDateAnimes = async ()=>{\n    let fetchedAnimes = [];\n    let page = 1;\n    const maxPages = 5;\n    while(fetchedAnimes.length < 20 && page <= maxPages){\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"\".concat(BASE_URL, \"/discover/tv?api_key=\").concat(API_KEY, \"&language=ja-JP&with_genres=16,10759&sort_by=first_air_date.desc&first_air_date.gte=2021-01-01&first_air_date.lte=2022-12-31&page=\").concat(page));\n        const filteredAnimes = response.data.results.filter((anime)=>anime.name && anime.overview && anime.poster_path);\n        fetchedAnimes = [\n            ...fetchedAnimes,\n            ...filteredAnimes\n        ].slice(0, 20);\n        page++;\n    }\n    return fetchedAnimes;\n};\nconst fetchAverageAnimes = async ()=>{\n    let fetchedAnimes = [];\n    let page = 1;\n    const maxPages = 5;\n    while(fetchedAnimes.length < 20 && page <= maxPages){\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"\".concat(BASE_URL, \"/discover/tv?api_key=\").concat(API_KEY, \"&with_genres=16,10759&language=ja-JP&page=\").concat(page));\n        const filteredAnimes = response.data.results.filter((anime)=>anime.name && anime.overview && anime.poster_path);\n        fetchedAnimes = [\n            ...fetchedAnimes,\n            ...filteredAnimes\n        ].slice(0, 20);\n        page++;\n    }\n    return fetchedAnimes;\n};\nconst fetchAnimeImages = async (animeId)=>{\n    const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"\".concat(BASE_URL, \"/tv/\").concat(animeId, \"/images?api_key=\").concat(API_KEY, \"&include_image_language=ja,en\"));\n    return response.data;\n};\nconst fetchAnimeCredits = async (animeId)=>{\n    const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"\".concat(BASE_URL, \"/tv/\").concat(animeId, \"/credits?api_key=\").concat(API_KEY));\n    //console.log(response);\n    return response.data;\n};\nconst fetchNowPlayingAnimes = async ()=>{\n    let fetchedAnimes = [];\n    let page = 1;\n    const maxPages = 5;\n    while(fetchedAnimes.length < 20 && page <= maxPages){\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"\".concat(BASE_URL, \"/discover/tv?api_key=\").concat(API_KEY, \"&language=ja-JP&sort_by=popularity.desc&with_genres=16&page=\").concat(page));\n        const filteredAnimes = response.data.results.filter((anime)=>anime.name && anime.overview && anime.poster_path);\n        fetchedAnimes = [\n            ...fetchedAnimes,\n            ...filteredAnimes\n        ].slice(0, 20);\n        page++;\n    }\n    return fetchedAnimes;\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./utils/TMDbApi.js\n"));

/***/ })

});