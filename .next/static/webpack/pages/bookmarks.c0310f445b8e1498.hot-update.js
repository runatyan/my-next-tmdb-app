"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/bookmarks",{

/***/ "./pages/bookmarks.js":
/*!****************************!*\
  !*** ./pages/bookmarks.js ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _context_AuthContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../context/AuthContext */ \"./context/AuthContext.js\");\n/* harmony import */ var _firebaseConfig__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../firebaseConfig */ \"./firebaseConfig.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! axios */ \"./node_modules/axios/lib/axios.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/link */ \"./node_modules/next/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_4__);\n// // import React, { useState, useEffect } from \"react\";\n// // import { useAuth } from \"../context/AuthContext\";\n// // import { firestore } from \"../firebaseConfig\";\n// // import axios from \"axios\";\n// // import Link from \"next/link\";\n// // const BookmarksPage = () => {\n// //   const { currentUser } = useAuth();\n// //   const [bookmarkedItems, setBookmarkedItems] = useState([]);\n// //   const API_KEY = process.env.NEXT_PUBLIC_TMDB_API_KEY;\n// //   useEffect(() => {\n// //     if (!currentUser) return;\n// //     const fetchBookmarks = async () => {\n// //       const bookmarkRef = firestore\n// //         .collection(\"bookmarks\")\n// //         .doc(currentUser.uid);\n// //       const doc = await bookmarkRef.get();\n// //       if (doc.exists) {\n// //         const bookmarksData = doc.data();\n// //         const movies = bookmarksData.movies || [];\n// //         const animes = bookmarksData.animes || [];\n// //         const allBookmarks = [\n// //           ...movies.map((id) => ({ id, type: \"movies\" })),\n// //           ...animes.map((id) => ({ id, type: \"anime\" })),\n// //         ];\n// //         const details = await Promise.all(\n// //           allBookmarks.map(async (item) => {\n// //             try {\n// //               const response = await axios.get(\n// //                 `https://api.themoviedb.org/3/${\n// //                   item.type === \"movies\" ? \"movie\" : \"tv\"\n// //                 }/${item.id}?api_key=${API_KEY}&language=ja-JP`\n// //               );\n// //               return { ...response.data, type: item.type }; // Include type to distinguish between movie and tv\n// //             } catch (error) {\n// //               console.error(\"Error fetching details: \", error);\n// //               return null;\n// //             }\n// //           })\n// //         );\n// //         setBookmarkedItems(details.filter(Boolean)); // Remove any null values\n// //       }\n// //     };\n// //     fetchBookmarks();\n// //   }, [currentUser, API_KEY]);\n// //   return (\n// //     <div className=\"w-11/12 mx-auto mt-5 pb-10\">\n// //       <h2 className=\"text-xl font-bold my-4\">ブックマーク</h2>\n// //       <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\n// //         {bookmarkedItems.map((item, index) => (\n// //           <div key={index} className=\"mb-4\">\n// //             <Link href={`/${item.type}/${item.id}`}>\n// //               <img\n// //                 src={`https://image.tmdb.org/t/p/w500${item.poster_path}`}\n// //                 alt={item.title || item.name}\n// //                 className=\"w-full h-auto rounded-md\"\n// //               />\n// //             </Link>\n// //           </div>\n// //         ))}\n// //       </div>\n// //     </div>\n// //   );\n// // };\n// // export default BookmarksPage;\n// import React, { useState, useEffect } from \"react\";\n// import { useAuth } from \"../context/AuthContext\";\n// import { firestore } from \"../firebaseConfig\";\n// import axios from \"axios\";\n// import Link from \"next/link\";\n// const BookmarksPage = () => {\n//   const { currentUser } = useAuth();\n//   const [bookmarkedItems, setBookmarkedItems] = useState([]);\n//   const API_KEY = process.env.NEXT_PUBLIC_TMDB_API_KEY;\n//   useEffect(() => {\n//     if (!currentUser) return;\n//     const fetchBookmarks = async () => {\n//       const bookmarkRef = firestore\n//         .collection(\"bookmarks\")\n//         .doc(currentUser.uid);\n//       const doc = await bookmarkRef.get();\n//       if (doc.exists) {\n//         const bookmarksData = doc.data();\n//         const movies = bookmarksData.movies || [];\n//         const animes = bookmarksData.animes || [];\n//         const allBookmarks = [...movies, ...animes];\n//         const details = await Promise.all(\n//           allBookmarks.map(async (id) => {\n//             try {\n//               // 映画の詳細を取得\n//               const movieResponse = await axios.get(\n//                 `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=ja-JP`\n//               );\n//               return { ...movieResponse.data, type: \"movies\" };\n//             } catch (error) {\n//               // 映画が見つからない場合は、アニメとして試みる\n//               try {\n//                 const animeResponse = await axios.get(\n//                   `https://api.themoviedb.org/3/tv/${id}?api_key=${API_KEY}&language=ja-JP`\n//                 );\n//                 return { ...animeResponse.data, type: \"anime\" };\n//               } catch (innerError) {\n//                 // どちらも見つからない場合はnullを返す\n//                 console.error(\"Error fetching details: \", innerError);\n//                 return null;\n//               }\n//             }\n//           })\n//         );\n//         setBookmarkedItems(details.filter(Boolean)); // Remove any null values\n//       }\n//     };\n//     fetchBookmarks();\n//   }, [currentUser, API_KEY]);\n//   // タイトルまたは名前でソートされたブックマークを表示\n//   const sortedBookmarks = bookmarkedItems.sort((a, b) => {\n//     // 映画のタイトルがない場合はアニメの名前を使用\n//     const titleA = a.title || a.name || \"\";\n//     const titleB = b.title || b.name || \"\";\n//     return titleA.localeCompare(titleB);\n//   });\n//   return (\n//     <div className=\"w-11/12 mx-auto mt-5 pb-10\">\n//       <h2 className=\"text-xl font-bold my-4\">ブックマーク</h2>\n//       <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\n//         {sortedBookmarks.map((item, index) => (\n//           <div key={index} className=\"mb-4\">\n//             <Link\n//               href={`/${item.type === \"movies\" ? \"movies\" : \"anime\"}/${\n//                 item.id\n//               }`}\n//             >\n//               <img\n//                 src={`https://image.tmdb.org/t/p/w500${item.poster_path}`}\n//                 alt={item.title || item.name}\n//                 className=\"w-full h-auto rounded-md\"\n//               />\n//             </Link>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n// export default BookmarksPage;\n\nvar _s = $RefreshSig$();\n\n\n\n\n\nconst BookmarksPage = ()=>{\n    _s();\n    const { currentUser } = (0,_context_AuthContext__WEBPACK_IMPORTED_MODULE_2__.useAuth)();\n    const [bookmarks, setBookmarks] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const API_KEY = \"29ddb4606480823262ca1015b1993619\";\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const fetchBookmarks = async ()=>{\n            if (!currentUser) return;\n            const bookmarkRef = _firebaseConfig__WEBPACK_IMPORTED_MODULE_3__.firestore.collection(\"bookmarks\").doc(currentUser.uid);\n            const doc = await bookmarkRef.get();\n            if (doc.exists) {\n                const { movies, animes } = doc.data();\n                // 各ブックマークにタイプを追加して統合\n                const combinedBookmarks = [\n                    ...movies.map((movie)=>({\n                            ...movie,\n                            type: \"movie\"\n                        })),\n                    ...animes.map((anime)=>({\n                            ...anime,\n                            type: \"anime\"\n                        }))\n                ];\n                // IDとタイプを基に詳細情報を取得\n                const details = await Promise.all(combinedBookmarks.map(async (item)=>{\n                    const url = \"https://api.themoviedb.org/3/\".concat(item.type === \"movie\" ? \"movies\" : \"anime\", \"/\").concat(item.id, \"?api_key=\").concat(API_KEY, \"&language=ja-JP\");\n                    try {\n                        const response = await axios__WEBPACK_IMPORTED_MODULE_5__[\"default\"].get(url);\n                        return {\n                            ...response.data,\n                            bookmarkDate: item.bookmarkDate,\n                            type: item.type\n                        };\n                    } catch (error) {\n                        console.error(\"Error fetching details:\", error);\n                        return null;\n                    }\n                }));\n                // nullを除外し、ブックマーク日付でソート\n                const validBookmarks = bookmarkDetails.filter((detail)=>detail !== null);\n                const sortedBookmarks = validBookmarks.map((response)=>response.data).sort((a, b)=>new Date(b.bookmarkDate) - new Date(a.bookmarkDate));\n                console.log(sortedBookmarks); // データ取得後のブックマークを確認する\n                setBookmarks(sortedBookmarks);\n            }\n        };\n        fetchBookmarks();\n    }, [\n        currentUser,\n        API_KEY\n    ]);\n    console.log(bookmarks);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"w-11/12 mx-auto mt-5 pb-10\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                className: \"text-xl font-bold my-4\",\n                children: \"ブックマーク\"\n            }, void 0, false, {\n                fileName: \"/Users/it222206/Desktop/my-next-tmdb-app/pages/bookmarks.js\",\n                lineNumber: 234,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\",\n                children: bookmarks.map((bookmark, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"mb-4\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_4___default()), {\n                            href: \"/\".concat(bookmark.type === \"movie\" ? \"movies\" : \"anime\", \"/\").concat(bookmark.id),\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                                src: \"https://image.tmdb.org/t/p/original\".concat(bookmark.poster_path),\n                                alt: bookmark.title || bookmark.name,\n                                className: \"w-full h-auto rounded-md\"\n                            }, void 0, false, {\n                                fileName: \"/Users/it222206/Desktop/my-next-tmdb-app/pages/bookmarks.js\",\n                                lineNumber: 243,\n                                columnNumber: 15\n                            }, undefined)\n                        }, void 0, false, {\n                            fileName: \"/Users/it222206/Desktop/my-next-tmdb-app/pages/bookmarks.js\",\n                            lineNumber: 238,\n                            columnNumber: 13\n                        }, undefined)\n                    }, index, false, {\n                        fileName: \"/Users/it222206/Desktop/my-next-tmdb-app/pages/bookmarks.js\",\n                        lineNumber: 237,\n                        columnNumber: 11\n                    }, undefined))\n            }, void 0, false, {\n                fileName: \"/Users/it222206/Desktop/my-next-tmdb-app/pages/bookmarks.js\",\n                lineNumber: 235,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/it222206/Desktop/my-next-tmdb-app/pages/bookmarks.js\",\n        lineNumber: 233,\n        columnNumber: 5\n    }, undefined);\n};\n_s(BookmarksPage, \"HFcgKGDAa1mc597itMAE0KJA4tk=\", false, function() {\n    return [\n        _context_AuthContext__WEBPACK_IMPORTED_MODULE_2__.useAuth\n    ];\n});\n_c = BookmarksPage;\n/* harmony default export */ __webpack_exports__[\"default\"] = (BookmarksPage);\nvar _c;\n$RefreshReg$(_c, \"BookmarksPage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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STtnQ0FDcENWLFdBQVU7Ozs7Ozs7Ozs7O3VCQVRORzs7Ozs7Ozs7Ozs7Ozs7OztBQWlCcEI7R0FsRk0vQzs7UUFDb0JKLHlEQUFPQTs7O0tBRDNCSTtBQW9GTiwrREFBZUEsYUFBYUEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9wYWdlcy9ib29rbWFya3MuanM/NjI3MyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAvLyBpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gXCJyZWFjdFwiO1xuLy8gLy8gaW1wb3J0IHsgdXNlQXV0aCB9IGZyb20gXCIuLi9jb250ZXh0L0F1dGhDb250ZXh0XCI7XG4vLyAvLyBpbXBvcnQgeyBmaXJlc3RvcmUgfSBmcm9tIFwiLi4vZmlyZWJhc2VDb25maWdcIjtcbi8vIC8vIGltcG9ydCBheGlvcyBmcm9tIFwiYXhpb3NcIjtcbi8vIC8vIGltcG9ydCBMaW5rIGZyb20gXCJuZXh0L2xpbmtcIjtcblxuLy8gLy8gY29uc3QgQm9va21hcmtzUGFnZSA9ICgpID0+IHtcbi8vIC8vICAgY29uc3QgeyBjdXJyZW50VXNlciB9ID0gdXNlQXV0aCgpO1xuLy8gLy8gICBjb25zdCBbYm9va21hcmtlZEl0ZW1zLCBzZXRCb29rbWFya2VkSXRlbXNdID0gdXNlU3RhdGUoW10pO1xuLy8gLy8gICBjb25zdCBBUElfS0VZID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfVE1EQl9BUElfS0VZO1xuXG4vLyAvLyAgIHVzZUVmZmVjdCgoKSA9PiB7XG4vLyAvLyAgICAgaWYgKCFjdXJyZW50VXNlcikgcmV0dXJuO1xuXG4vLyAvLyAgICAgY29uc3QgZmV0Y2hCb29rbWFya3MgPSBhc3luYyAoKSA9PiB7XG4vLyAvLyAgICAgICBjb25zdCBib29rbWFya1JlZiA9IGZpcmVzdG9yZVxuLy8gLy8gICAgICAgICAuY29sbGVjdGlvbihcImJvb2ttYXJrc1wiKVxuLy8gLy8gICAgICAgICAuZG9jKGN1cnJlbnRVc2VyLnVpZCk7XG4vLyAvLyAgICAgICBjb25zdCBkb2MgPSBhd2FpdCBib29rbWFya1JlZi5nZXQoKTtcblxuLy8gLy8gICAgICAgaWYgKGRvYy5leGlzdHMpIHtcbi8vIC8vICAgICAgICAgY29uc3QgYm9va21hcmtzRGF0YSA9IGRvYy5kYXRhKCk7XG4vLyAvLyAgICAgICAgIGNvbnN0IG1vdmllcyA9IGJvb2ttYXJrc0RhdGEubW92aWVzIHx8IFtdO1xuLy8gLy8gICAgICAgICBjb25zdCBhbmltZXMgPSBib29rbWFya3NEYXRhLmFuaW1lcyB8fCBbXTtcbi8vIC8vICAgICAgICAgY29uc3QgYWxsQm9va21hcmtzID0gW1xuLy8gLy8gICAgICAgICAgIC4uLm1vdmllcy5tYXAoKGlkKSA9PiAoeyBpZCwgdHlwZTogXCJtb3ZpZXNcIiB9KSksXG4vLyAvLyAgICAgICAgICAgLi4uYW5pbWVzLm1hcCgoaWQpID0+ICh7IGlkLCB0eXBlOiBcImFuaW1lXCIgfSkpLFxuLy8gLy8gICAgICAgICBdO1xuXG4vLyAvLyAgICAgICAgIGNvbnN0IGRldGFpbHMgPSBhd2FpdCBQcm9taXNlLmFsbChcbi8vIC8vICAgICAgICAgICBhbGxCb29rbWFya3MubWFwKGFzeW5jIChpdGVtKSA9PiB7XG4vLyAvLyAgICAgICAgICAgICB0cnkge1xuLy8gLy8gICAgICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldChcbi8vIC8vICAgICAgICAgICAgICAgICBgaHR0cHM6Ly9hcGkudGhlbW92aWVkYi5vcmcvMy8ke1xuLy8gLy8gICAgICAgICAgICAgICAgICAgaXRlbS50eXBlID09PSBcIm1vdmllc1wiID8gXCJtb3ZpZVwiIDogXCJ0dlwiXG4vLyAvLyAgICAgICAgICAgICAgICAgfS8ke2l0ZW0uaWR9P2FwaV9rZXk9JHtBUElfS0VZfSZsYW5ndWFnZT1qYS1KUGBcbi8vIC8vICAgICAgICAgICAgICAgKTtcbi8vIC8vICAgICAgICAgICAgICAgcmV0dXJuIHsgLi4ucmVzcG9uc2UuZGF0YSwgdHlwZTogaXRlbS50eXBlIH07IC8vIEluY2x1ZGUgdHlwZSB0byBkaXN0aW5ndWlzaCBiZXR3ZWVuIG1vdmllIGFuZCB0dlxuLy8gLy8gICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbi8vIC8vICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIGZldGNoaW5nIGRldGFpbHM6IFwiLCBlcnJvcik7XG4vLyAvLyAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuLy8gLy8gICAgICAgICAgICAgfVxuLy8gLy8gICAgICAgICAgIH0pXG4vLyAvLyAgICAgICAgICk7XG5cbi8vIC8vICAgICAgICAgc2V0Qm9va21hcmtlZEl0ZW1zKGRldGFpbHMuZmlsdGVyKEJvb2xlYW4pKTsgLy8gUmVtb3ZlIGFueSBudWxsIHZhbHVlc1xuLy8gLy8gICAgICAgfVxuLy8gLy8gICAgIH07XG5cbi8vIC8vICAgICBmZXRjaEJvb2ttYXJrcygpO1xuLy8gLy8gICB9LCBbY3VycmVudFVzZXIsIEFQSV9LRVldKTtcblxuLy8gLy8gICByZXR1cm4gKFxuLy8gLy8gICAgIDxkaXYgY2xhc3NOYW1lPVwidy0xMS8xMiBteC1hdXRvIG10LTUgcGItMTBcIj5cbi8vIC8vICAgICAgIDxoMiBjbGFzc05hbWU9XCJ0ZXh0LXhsIGZvbnQtYm9sZCBteS00XCI+44OW44OD44Kv44Oe44O844KvPC9oMj5cbi8vIC8vICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZ3JpZCBncmlkLWNvbHMtMiBtZDpncmlkLWNvbHMtMyBsZzpncmlkLWNvbHMtNCBnYXAtNFwiPlxuLy8gLy8gICAgICAgICB7Ym9va21hcmtlZEl0ZW1zLm1hcCgoaXRlbSwgaW5kZXgpID0+IChcbi8vIC8vICAgICAgICAgICA8ZGl2IGtleT17aW5kZXh9IGNsYXNzTmFtZT1cIm1iLTRcIj5cbi8vIC8vICAgICAgICAgICAgIDxMaW5rIGhyZWY9e2AvJHtpdGVtLnR5cGV9LyR7aXRlbS5pZH1gfT5cbi8vIC8vICAgICAgICAgICAgICAgPGltZ1xuLy8gLy8gICAgICAgICAgICAgICAgIHNyYz17YGh0dHBzOi8vaW1hZ2UudG1kYi5vcmcvdC9wL3c1MDAke2l0ZW0ucG9zdGVyX3BhdGh9YH1cbi8vIC8vICAgICAgICAgICAgICAgICBhbHQ9e2l0ZW0udGl0bGUgfHwgaXRlbS5uYW1lfVxuLy8gLy8gICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInctZnVsbCBoLWF1dG8gcm91bmRlZC1tZFwiXG4vLyAvLyAgICAgICAgICAgICAgIC8+XG4vLyAvLyAgICAgICAgICAgICA8L0xpbms+XG4vLyAvLyAgICAgICAgICAgPC9kaXY+XG4vLyAvLyAgICAgICAgICkpfVxuLy8gLy8gICAgICAgPC9kaXY+XG4vLyAvLyAgICAgPC9kaXY+XG4vLyAvLyAgICk7XG4vLyAvLyB9O1xuXG4vLyAvLyBleHBvcnQgZGVmYXVsdCBCb29rbWFya3NQYWdlO1xuXG4vLyBpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gXCJyZWFjdFwiO1xuLy8gaW1wb3J0IHsgdXNlQXV0aCB9IGZyb20gXCIuLi9jb250ZXh0L0F1dGhDb250ZXh0XCI7XG4vLyBpbXBvcnQgeyBmaXJlc3RvcmUgfSBmcm9tIFwiLi4vZmlyZWJhc2VDb25maWdcIjtcbi8vIGltcG9ydCBheGlvcyBmcm9tIFwiYXhpb3NcIjtcbi8vIGltcG9ydCBMaW5rIGZyb20gXCJuZXh0L2xpbmtcIjtcblxuLy8gY29uc3QgQm9va21hcmtzUGFnZSA9ICgpID0+IHtcbi8vICAgY29uc3QgeyBjdXJyZW50VXNlciB9ID0gdXNlQXV0aCgpO1xuLy8gICBjb25zdCBbYm9va21hcmtlZEl0ZW1zLCBzZXRCb29rbWFya2VkSXRlbXNdID0gdXNlU3RhdGUoW10pO1xuLy8gICBjb25zdCBBUElfS0VZID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfVE1EQl9BUElfS0VZO1xuXG4vLyAgIHVzZUVmZmVjdCgoKSA9PiB7XG4vLyAgICAgaWYgKCFjdXJyZW50VXNlcikgcmV0dXJuO1xuXG4vLyAgICAgY29uc3QgZmV0Y2hCb29rbWFya3MgPSBhc3luYyAoKSA9PiB7XG4vLyAgICAgICBjb25zdCBib29rbWFya1JlZiA9IGZpcmVzdG9yZVxuLy8gICAgICAgICAuY29sbGVjdGlvbihcImJvb2ttYXJrc1wiKVxuLy8gICAgICAgICAuZG9jKGN1cnJlbnRVc2VyLnVpZCk7XG4vLyAgICAgICBjb25zdCBkb2MgPSBhd2FpdCBib29rbWFya1JlZi5nZXQoKTtcblxuLy8gICAgICAgaWYgKGRvYy5leGlzdHMpIHtcbi8vICAgICAgICAgY29uc3QgYm9va21hcmtzRGF0YSA9IGRvYy5kYXRhKCk7XG4vLyAgICAgICAgIGNvbnN0IG1vdmllcyA9IGJvb2ttYXJrc0RhdGEubW92aWVzIHx8IFtdO1xuLy8gICAgICAgICBjb25zdCBhbmltZXMgPSBib29rbWFya3NEYXRhLmFuaW1lcyB8fCBbXTtcbi8vICAgICAgICAgY29uc3QgYWxsQm9va21hcmtzID0gWy4uLm1vdmllcywgLi4uYW5pbWVzXTtcblxuLy8gICAgICAgICBjb25zdCBkZXRhaWxzID0gYXdhaXQgUHJvbWlzZS5hbGwoXG4vLyAgICAgICAgICAgYWxsQm9va21hcmtzLm1hcChhc3luYyAoaWQpID0+IHtcbi8vICAgICAgICAgICAgIHRyeSB7XG4vLyAgICAgICAgICAgICAgIC8vIOaYoOeUu+OBruips+e0sOOCkuWPluW+l1xuLy8gICAgICAgICAgICAgICBjb25zdCBtb3ZpZVJlc3BvbnNlID0gYXdhaXQgYXhpb3MuZ2V0KFxuLy8gICAgICAgICAgICAgICAgIGBodHRwczovL2FwaS50aGVtb3ZpZWRiLm9yZy8zL21vdmllLyR7aWR9P2FwaV9rZXk9JHtBUElfS0VZfSZsYW5ndWFnZT1qYS1KUGBcbi8vICAgICAgICAgICAgICAgKTtcbi8vICAgICAgICAgICAgICAgcmV0dXJuIHsgLi4ubW92aWVSZXNwb25zZS5kYXRhLCB0eXBlOiBcIm1vdmllc1wiIH07XG4vLyAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuLy8gICAgICAgICAgICAgICAvLyDmmKDnlLvjgYzopovjgaTjgYvjgonjgarjgYTloLTlkIjjga/jgIHjgqLjg4vjg6HjgajjgZfjgaboqabjgb/jgotcbi8vICAgICAgICAgICAgICAgdHJ5IHtcbi8vICAgICAgICAgICAgICAgICBjb25zdCBhbmltZVJlc3BvbnNlID0gYXdhaXQgYXhpb3MuZ2V0KFxuLy8gICAgICAgICAgICAgICAgICAgYGh0dHBzOi8vYXBpLnRoZW1vdmllZGIub3JnLzMvdHYvJHtpZH0/YXBpX2tleT0ke0FQSV9LRVl9Jmxhbmd1YWdlPWphLUpQYFxuLy8gICAgICAgICAgICAgICAgICk7XG4vLyAgICAgICAgICAgICAgICAgcmV0dXJuIHsgLi4uYW5pbWVSZXNwb25zZS5kYXRhLCB0eXBlOiBcImFuaW1lXCIgfTtcbi8vICAgICAgICAgICAgICAgfSBjYXRjaCAoaW5uZXJFcnJvcikge1xuLy8gICAgICAgICAgICAgICAgIC8vIOOBqeOBoeOCieOCguimi+OBpOOBi+OCieOBquOBhOWgtOWQiOOBr251bGzjgpLov5TjgZlcbi8vICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgZmV0Y2hpbmcgZGV0YWlsczogXCIsIGlubmVyRXJyb3IpO1xuLy8gICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuLy8gICAgICAgICAgICAgICB9XG4vLyAgICAgICAgICAgICB9XG4vLyAgICAgICAgICAgfSlcbi8vICAgICAgICAgKTtcblxuLy8gICAgICAgICBzZXRCb29rbWFya2VkSXRlbXMoZGV0YWlscy5maWx0ZXIoQm9vbGVhbikpOyAvLyBSZW1vdmUgYW55IG51bGwgdmFsdWVzXG4vLyAgICAgICB9XG4vLyAgICAgfTtcblxuLy8gICAgIGZldGNoQm9va21hcmtzKCk7XG4vLyAgIH0sIFtjdXJyZW50VXNlciwgQVBJX0tFWV0pO1xuXG4vLyAgIC8vIOOCv+OCpOODiOODq+OBvuOBn+OBr+WQjeWJjeOBp+OCveODvOODiOOBleOCjOOBn+ODluODg+OCr+ODnuODvOOCr+OCkuihqOekulxuLy8gICBjb25zdCBzb3J0ZWRCb29rbWFya3MgPSBib29rbWFya2VkSXRlbXMuc29ydCgoYSwgYikgPT4ge1xuLy8gICAgIC8vIOaYoOeUu+OBruOCv+OCpOODiOODq+OBjOOBquOBhOWgtOWQiOOBr+OCouODi+ODoeOBruWQjeWJjeOCkuS9v+eUqFxuLy8gICAgIGNvbnN0IHRpdGxlQSA9IGEudGl0bGUgfHwgYS5uYW1lIHx8IFwiXCI7XG4vLyAgICAgY29uc3QgdGl0bGVCID0gYi50aXRsZSB8fCBiLm5hbWUgfHwgXCJcIjtcbi8vICAgICByZXR1cm4gdGl0bGVBLmxvY2FsZUNvbXBhcmUodGl0bGVCKTtcbi8vICAgfSk7XG5cbi8vICAgcmV0dXJuIChcbi8vICAgICA8ZGl2IGNsYXNzTmFtZT1cInctMTEvMTIgbXgtYXV0byBtdC01IHBiLTEwXCI+XG4vLyAgICAgICA8aDIgY2xhc3NOYW1lPVwidGV4dC14bCBmb250LWJvbGQgbXktNFwiPuODluODg+OCr+ODnuODvOOCrzwvaDI+XG4vLyAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImdyaWQgZ3JpZC1jb2xzLTIgbWQ6Z3JpZC1jb2xzLTMgbGc6Z3JpZC1jb2xzLTQgZ2FwLTRcIj5cbi8vICAgICAgICAge3NvcnRlZEJvb2ttYXJrcy5tYXAoKGl0ZW0sIGluZGV4KSA9PiAoXG4vLyAgICAgICAgICAgPGRpdiBrZXk9e2luZGV4fSBjbGFzc05hbWU9XCJtYi00XCI+XG4vLyAgICAgICAgICAgICA8TGlua1xuLy8gICAgICAgICAgICAgICBocmVmPXtgLyR7aXRlbS50eXBlID09PSBcIm1vdmllc1wiID8gXCJtb3ZpZXNcIiA6IFwiYW5pbWVcIn0vJHtcbi8vICAgICAgICAgICAgICAgICBpdGVtLmlkXG4vLyAgICAgICAgICAgICAgIH1gfVxuLy8gICAgICAgICAgICAgPlxuLy8gICAgICAgICAgICAgICA8aW1nXG4vLyAgICAgICAgICAgICAgICAgc3JjPXtgaHR0cHM6Ly9pbWFnZS50bWRiLm9yZy90L3AvdzUwMCR7aXRlbS5wb3N0ZXJfcGF0aH1gfVxuLy8gICAgICAgICAgICAgICAgIGFsdD17aXRlbS50aXRsZSB8fCBpdGVtLm5hbWV9XG4vLyAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwidy1mdWxsIGgtYXV0byByb3VuZGVkLW1kXCJcbi8vICAgICAgICAgICAgICAgLz5cbi8vICAgICAgICAgICAgIDwvTGluaz5cbi8vICAgICAgICAgICA8L2Rpdj5cbi8vICAgICAgICAgKSl9XG4vLyAgICAgICA8L2Rpdj5cbi8vICAgICA8L2Rpdj5cbi8vICAgKTtcbi8vIH07XG5cbi8vIGV4cG9ydCBkZWZhdWx0IEJvb2ttYXJrc1BhZ2U7XG5cbmltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB1c2VBdXRoIH0gZnJvbSBcIi4uL2NvbnRleHQvQXV0aENvbnRleHRcIjtcbmltcG9ydCB7IGZpcmVzdG9yZSB9IGZyb20gXCIuLi9maXJlYmFzZUNvbmZpZ1wiO1xuaW1wb3J0IGF4aW9zIGZyb20gXCJheGlvc1wiO1xuaW1wb3J0IExpbmsgZnJvbSBcIm5leHQvbGlua1wiO1xuXG5jb25zdCBCb29rbWFya3NQYWdlID0gKCkgPT4ge1xuICBjb25zdCB7IGN1cnJlbnRVc2VyIH0gPSB1c2VBdXRoKCk7XG4gIGNvbnN0IFtib29rbWFya3MsIHNldEJvb2ttYXJrc10gPSB1c2VTdGF0ZShbXSk7XG4gIGNvbnN0IEFQSV9LRVkgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19UTURCX0FQSV9LRVk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBmZXRjaEJvb2ttYXJrcyA9IGFzeW5jICgpID0+IHtcbiAgICAgIGlmICghY3VycmVudFVzZXIpIHJldHVybjtcblxuICAgICAgY29uc3QgYm9va21hcmtSZWYgPSBmaXJlc3RvcmVcbiAgICAgICAgLmNvbGxlY3Rpb24oXCJib29rbWFya3NcIilcbiAgICAgICAgLmRvYyhjdXJyZW50VXNlci51aWQpO1xuICAgICAgY29uc3QgZG9jID0gYXdhaXQgYm9va21hcmtSZWYuZ2V0KCk7XG5cbiAgICAgIGlmIChkb2MuZXhpc3RzKSB7XG4gICAgICAgIGNvbnN0IHsgbW92aWVzLCBhbmltZXMgfSA9IGRvYy5kYXRhKCk7XG4gICAgICAgIC8vIOWQhOODluODg+OCr+ODnuODvOOCr+OBq+OCv+OCpOODl+OCkui/veWKoOOBl+OBpue1seWQiFxuICAgICAgICBjb25zdCBjb21iaW5lZEJvb2ttYXJrcyA9IFtcbiAgICAgICAgICAuLi5tb3ZpZXMubWFwKChtb3ZpZSkgPT4gKHsgLi4ubW92aWUsIHR5cGU6IFwibW92aWVcIiB9KSksXG4gICAgICAgICAgLi4uYW5pbWVzLm1hcCgoYW5pbWUpID0+ICh7IC4uLmFuaW1lLCB0eXBlOiBcImFuaW1lXCIgfSkpLFxuICAgICAgICBdO1xuXG4gICAgICAgIC8vIElE44Go44K/44Kk44OX44KS5Z+644Gr6Kmz57Sw5oOF5aCx44KS5Y+W5b6XXG4gICAgICAgIGNvbnN0IGRldGFpbHMgPSBhd2FpdCBQcm9taXNlLmFsbChcbiAgICAgICAgICBjb21iaW5lZEJvb2ttYXJrcy5tYXAoYXN5bmMgKGl0ZW0pID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHVybCA9IGBodHRwczovL2FwaS50aGVtb3ZpZWRiLm9yZy8zLyR7XG4gICAgICAgICAgICAgIGl0ZW0udHlwZSA9PT0gXCJtb3ZpZVwiID8gXCJtb3ZpZXNcIiA6IFwiYW5pbWVcIlxuICAgICAgICAgICAgfS8ke2l0ZW0uaWR9P2FwaV9rZXk9JHtBUElfS0VZfSZsYW5ndWFnZT1qYS1KUGA7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldCh1cmwpO1xuICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIC4uLnJlc3BvbnNlLmRhdGEsXG4gICAgICAgICAgICAgICAgYm9va21hcmtEYXRlOiBpdGVtLmJvb2ttYXJrRGF0ZSxcbiAgICAgICAgICAgICAgICB0eXBlOiBpdGVtLnR5cGUsXG4gICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgZmV0Y2hpbmcgZGV0YWlsczpcIiwgZXJyb3IpO1xuICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KVxuICAgICAgICApO1xuXG4gICAgICAgIC8vIG51bGzjgpLpmaTlpJbjgZfjgIHjg5bjg4Pjgq/jg57jg7zjgq/ml6Xku5jjgafjgr3jg7zjg4hcbiAgICAgICAgY29uc3QgdmFsaWRCb29rbWFya3MgPSBib29rbWFya0RldGFpbHMuZmlsdGVyKFxuICAgICAgICAgIChkZXRhaWwpID0+IGRldGFpbCAhPT0gbnVsbFxuICAgICAgICApO1xuICAgICAgICBjb25zdCBzb3J0ZWRCb29rbWFya3MgPSB2YWxpZEJvb2ttYXJrc1xuICAgICAgICAgIC5tYXAoKHJlc3BvbnNlKSA9PiByZXNwb25zZS5kYXRhKVxuICAgICAgICAgIC5zb3J0KChhLCBiKSA9PiBuZXcgRGF0ZShiLmJvb2ttYXJrRGF0ZSkgLSBuZXcgRGF0ZShhLmJvb2ttYXJrRGF0ZSkpO1xuXG4gICAgICAgIGNvbnNvbGUubG9nKHNvcnRlZEJvb2ttYXJrcyk7IC8vIOODh+ODvOOCv+WPluW+l+W+jOOBruODluODg+OCr+ODnuODvOOCr+OCkueiuuiqjeOBmeOCi1xuICAgICAgICBzZXRCb29rbWFya3Moc29ydGVkQm9va21hcmtzKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgZmV0Y2hCb29rbWFya3MoKTtcbiAgfSwgW2N1cnJlbnRVc2VyLCBBUElfS0VZXSk7XG5cbiAgY29uc29sZS5sb2coYm9va21hcmtzKTtcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwidy0xMS8xMiBteC1hdXRvIG10LTUgcGItMTBcIj5cbiAgICAgIDxoMiBjbGFzc05hbWU9XCJ0ZXh0LXhsIGZvbnQtYm9sZCBteS00XCI+44OW44OD44Kv44Oe44O844KvPC9oMj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZ3JpZCBncmlkLWNvbHMtMiBtZDpncmlkLWNvbHMtMyBsZzpncmlkLWNvbHMtNCBnYXAtNFwiPlxuICAgICAgICB7Ym9va21hcmtzLm1hcCgoYm9va21hcmssIGluZGV4KSA9PiAoXG4gICAgICAgICAgPGRpdiBrZXk9e2luZGV4fSBjbGFzc05hbWU9XCJtYi00XCI+XG4gICAgICAgICAgICA8TGlua1xuICAgICAgICAgICAgICBocmVmPXtgLyR7Ym9va21hcmsudHlwZSA9PT0gXCJtb3ZpZVwiID8gXCJtb3ZpZXNcIiA6IFwiYW5pbWVcIn0vJHtcbiAgICAgICAgICAgICAgICBib29rbWFyay5pZFxuICAgICAgICAgICAgICB9YH1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgPGltZ1xuICAgICAgICAgICAgICAgIHNyYz17YGh0dHBzOi8vaW1hZ2UudG1kYi5vcmcvdC9wL29yaWdpbmFsJHtib29rbWFyay5wb3N0ZXJfcGF0aH1gfVxuICAgICAgICAgICAgICAgIGFsdD17Ym9va21hcmsudGl0bGUgfHwgYm9va21hcmsubmFtZX1cbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJ3LWZ1bGwgaC1hdXRvIHJvdW5kZWQtbWRcIlxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICApKX1cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQm9va21hcmtzUGFnZTtcbiJdLCJuYW1lcyI6WyJSZWFjdCIsInVzZVN0YXRlIiwidXNlRWZmZWN0IiwidXNlQXV0aCIsImZpcmVzdG9yZSIsImF4aW9zIiwiTGluayIsIkJvb2ttYXJrc1BhZ2UiLCJjdXJyZW50VXNlciIsImJvb2ttYXJrcyIsInNldEJvb2ttYXJrcyIsIkFQSV9LRVkiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfVE1EQl9BUElfS0VZIiwiZmV0Y2hCb29rbWFya3MiLCJib29rbWFya1JlZiIsImNvbGxlY3Rpb24iLCJkb2MiLCJ1aWQiLCJnZXQiLCJleGlzdHMiLCJtb3ZpZXMiLCJhbmltZXMiLCJkYXRhIiwiY29tYmluZWRCb29rbWFya3MiLCJtYXAiLCJtb3ZpZSIsInR5cGUiLCJhbmltZSIsImRldGFpbHMiLCJQcm9taXNlIiwiYWxsIiwiaXRlbSIsInVybCIsImlkIiwicmVzcG9uc2UiLCJib29rbWFya0RhdGUiLCJlcnJvciIsImNvbnNvbGUiLCJ2YWxpZEJvb2ttYXJrcyIsImJvb2ttYXJrRGV0YWlscyIsImZpbHRlciIsImRldGFpbCIsInNvcnRlZEJvb2ttYXJrcyIsInNvcnQiLCJhIiwiYiIsIkRhdGUiLCJsb2ciLCJkaXYiLCJjbGFzc05hbWUiLCJoMiIsImJvb2ttYXJrIiwiaW5kZXgiLCJocmVmIiwiaW1nIiwic3JjIiwicG9zdGVyX3BhdGgiLCJhbHQiLCJ0aXRsZSIsIm5hbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./pages/bookmarks.js\n"));

/***/ })

});